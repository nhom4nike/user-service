name: Deployment

on:
  workflow_dispatch:

env:
  IMAGE_NAME: user-service
  PROJECT_PATH: /opt/04-nike/user-service

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.4.0
      with:
        mongodb-version: 4.4
        mongodb-port: 27011

    - run: npm ci
    - run: npm test
    env:
      CI: true
  
  build:
    name: 'Build docker image'
    needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Get commit revision
      id: vars
      shell: bash
      run: echo ::set-output name=tag::$(echo $(git describe --long --tags --always)| sed 's/v//')

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  
  deploy:
    name: 'Update server'
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:

    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Get commit revision
      id: vars
      shell: bash
      run: echo ::set-output name=tag::$(echo $(git describe --long --tags --always)| sed 's/v//')

    - name: SSH and deploy in server
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
        PORT: ${{ secrets.SSH_PORT }}
        script: |
          cd ${{ env.PROJECT_PATH }}
          echo IMAGE=${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }} > .env
          docker-compose up -d
